# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- cj

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'


- task: UseDotNet@2
  inputs:
    version: '7.0.x'

- script: |
    pwd
    ls -lrt
    msbuild -target:clean
  displayName: 'dotnet build'


- script: |
    wget https://github.com/github/codeql-cli-binaries/releases/latest/download/codeql-linux64.zip
    #unzip codeql-linux64.zip -d $(Pipeline.Workspace)/codeql
    unzip codeql-linux64.zip 
    #-d codeql
    echo $(Pipeline.Workspace)
    ls $(Pipeline.Workspace)
    pwd
    ls
    cd codeql
    pwd
    ls -lrt
    
    echo "export PATH=$PATH:$PWD/codeql/codeql" >> ~/.bashrc
    source ~/.bashrc
    cat ~/.bashrc
  displayName: 'Get latest CodeQL package. Install on Agent.'


- script: |
    ls
    ./codeql/codeql database create WebGoatNet -l csharp --command="msbuild"
    #./codeql database create WebGoatNet -l csharp --command="msbuild"
  displayName: 'Creating CodeQL DB'

- script: |
    ./codeql/codeql resolve languages
    ./codeql/codeql resolve qlpacks
    #./codeql/codeql pack install /home/vsts/work/1/s/codeql/csharp
    ./codeql/codeql database analyze WebGoatNet --format=sarif-latest --output=results.sarif --download
  displayName: 'Analyze CodeQL DB'